(()=>{var e,n,t={887:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>v});var o=t(354),r=t.n(o),i=t(314),A=t.n(i),a=t(417),c=t.n(a),s=new URL(t(787),t.b),l=new URL(t(955),t.b),d=new URL(t(632),t.b),f=new URL(t(22),t.b),p=new URL(t(682),t.b),u=new URL(t(480),t.b),C=A()(r()),h=c()(s),m=c()(l),b=c()(d),x=c()(f),g=c()(p),y=c()(u);C.push([e.id,`@font-face{font-family:"Jost";src:url(${h}) format("woff2"),url(${m}) format("woff");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:"Jost";src:url(${b}) format("woff2"),url(${x}) format("woff");font-weight:700;font-style:normal;font-display:swap}@font-face{font-family:"Jost";src:url(${g}) format("woff2"),url(${y}) format("woff");font-weight:600;font-style:normal;font-display:swap}*{padding:0px;margin:0px;border:none}*,*::before,*::after{-webkit-box-sizing:border-box;box-sizing:border-box}a,a:link,a:visited{-webkit-text-decoration:none;text-decoration:none}a:hover{-webkit-text-decoration:none;text-decoration:none}aside,nav,footer,header,section,main{display:block}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit}ul,ul li{list-style:none}img{vertical-align:top}img,svg{max-width:100%;height:auto}address{font-style:normal}input,textarea,button,select{font-family:inherit;font-size:inherit;color:inherit;background-color:rgba(0,0,0,0)}input::-ms-clear{display:none}button,input[type=submit]{display:inline-block;-webkit-box-shadow:none;box-shadow:none;background-color:rgba(0,0,0,0);background:none;cursor:pointer}input:focus,input:active,button:focus,button:active{outline:none}button::-moz-focus-inner{padding:0;border:0}label{cursor:pointer}legend{display:block}input[type=file]{max-width:100%}body{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;min-width:320px;min-height:100dvh;font-family:"Jost",sans-serif;font-weight:400;line-height:1.6;background-color:#fff;color:#141024}section{padding:120px 0}h2{font-weight:600;font-size:30px;color:#fff}h3{font-weight:600;font-size:36px;line-height:1.3}.container{margin:0 auto;padding:0 20px;max-width:1200px;width:100%}.container--wide{max-width:1760px}.logo{color:#fff;font-weight:600;font-size:30px}.tel{font-weight:600;font-size:30px;color:#fff}.tel:hover{cursor:pointer}.button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:25px 54px;font-size:18px;font-weight:400;-webkit-text-decoration:none;text-decoration:none;border:none;border-radius:5px;background-color:#d52027;color:#fff;cursor:pointer;-webkit-transition:background-color .3s ease, color .3s ease;transition:background-color .3s ease, color .3s ease}.button:hover{background-color:#b9191d;color:#fff}.button--dark{background-color:#141024}.button--dark:hover{background-color:#282148;color:#fff}.header{position:sticky;top:0;z-index:500;background-color:#141024;color:#fff}.header__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:30px 0;gap:20px}.header__content .header-nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;gap:40px;font-size:20px}.header__content .header-nav__link{color:#fff}.header__content .header-nav__link:hover{-webkit-text-decoration:underline;text-decoration:underline;cursor:pointer}.main{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.footer{background-color:#141024;color:#fff}.footer__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:40px 0}.footer__content .footer-top-block{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__content .footer-bottom-block__copyright{color:#b8b7bd}.promo{height:calc(100dvh - 108px);max-height:972px;position:relative;overflow:hidden;background-color:#141024}.promo__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;max-width:516px;margin-top:116px;color:#fff}.promo__title{font-weight:600;font-size:70px}.promo__description{font-size:20px;max-width:478px;margin:20px 0 0 0}.promo__btn{margin-top:50px}.promo__img{position:absolute;top:54px;left:49%;width:783px;height:auto}.about__description{font-size:30px;max-width:890px}.about__stats{margin-top:60px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:40px}.about__stat-item{-ms-flex-preferred-size:260px;flex-basis:260px}.about__stat-value{font-size:70px;font-weight:600;color:#d52027}.about__stat-caption{font-size:18px;color:#5b5866}`,"",{version:3,sources:["webpack://./src/styles/fonts.scss","webpack://./src/styles/reset.scss","webpack://./src/styles/global.scss","webpack://./src/styles/variables.scss","webpack://./src/styles/blocks/layout.scss","webpack://./src/styles/blocks/promo.scss","webpack://./src/styles/blocks/about.scss"],names:[],mappings:"AACE,WACE,kBAUe,CATf,kHACE,CAEF,eAM4D,CAL5D,iBAPoD,CAQpD,iBAAA,CAPF,WACE,kBAWe,CAVf,kHACE,CAEF,eAOyD,CANzD,iBAPoD,CAQpD,iBAAA,CAPF,WACE,kBAYe,CAXf,kHACE,CAEF,eAQ6D,CAP7D,iBAPoD,CAQpD,iBAAA,CCRJ,EACE,WAAA,CACA,UAAA,CACA,WAAA,CAGF,qBAGE,6BAAA,CAAA,qBAAA,CAGF,mBAGE,4BAAA,CAAA,oBAAA,CAGF,QACE,4BAAA,CAAA,oBAAA,CAGF,qCAME,aAAA,CAGF,oBAOE,iBAAA,CACA,mBAAA,CAGF,SAEE,eAAA,CAGF,IACE,kBAAA,CAGF,QAEE,cAAA,CACA,WAAA,CAGF,QACE,iBAAA,CAGF,6BAIE,mBAAA,CACA,iBAAA,CACA,aAAA,CACA,8BAAA,CAGF,iBACE,YAAA,CAGF,0BAEE,oBAAA,CACA,uBAAA,CAAA,eAAA,CACA,8BAAA,CACA,eAAA,CACA,cAAA,CAGF,oDAIE,YAAA,CAGF,yBACE,SAAA,CACA,QAAA,CAGF,MACE,cAAA,CAGF,OACE,aAAA,CAGF,iBACE,cAAA,CCvGF,KACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,6BAAA,CACA,eAAA,CACA,iBAAA,CACA,6BCRU,CDSV,eAAA,CACA,eAAA,CACA,qBCPgB,CDQhB,aCTc,CDYhB,QACE,eAAA,CAGF,GACE,eAAA,CACA,cAAA,CACA,UClBgB,CDqBlB,GACE,eAAA,CACA,cAAA,CACA,eAAA,CAGF,WACE,aAAA,CACA,cAAA,CACA,gBAAA,CACA,UAAA,CAEA,iBACE,gBAAA,CAIJ,MACE,UCvCgB,CDwChB,eAAA,CACA,cAAA,CAGF,KACE,eAAA,CACA,cAAA,CACA,UC/CgB,CDiDhB,WACE,cAAA,CAIJ,QACE,0BAAA,CAAA,0BAAA,CAAA,mBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,iBAAA,CACA,cAAA,CACA,eAAA,CACA,4BAAA,CAAA,oBAAA,CACA,WAAA,CACA,iBAAA,CACA,wBC/Da,CDgEb,UCjEgB,CDkEhB,cAAA,CACA,4DACE,CADF,oDACE,CAGF,cACE,wBCvDwB,CDwDxB,UCzEc,CD4EhB,cACE,wBC9EY,CDgFZ,oBACE,wBC7DwB,CD8DxB,UCjFY,CCFlB,QACE,eAAA,CACA,KAAA,CACA,WAAA,CACA,wBDHc,CCId,UDHgB,CCKhB,iBACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,6BAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,cAAA,CACA,QAAA,CAGE,mCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,QAAA,CACA,cAAA,CAGF,mCACE,UDpBU,CCqBV,yCACE,iCAAA,CAAA,yBAAA,CACA,cAAA,CAOV,MACE,kBAAA,CAAA,mBAAA,CAAA,WAAA,CAGF,QACE,wBDpCc,CCqCd,UDpCgB,CCsChB,iBACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,cAAA,CAEA,mCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,6BAAA,CAIA,iDACE,aD7Cc,CERtB,OACE,2BAAA,CACA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,wBFJc,CEMd,gBACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,eAAA,CACA,gBAAA,CACA,UFXc,CEchB,cACE,eAAA,CACA,cAAA,CAGF,oBACE,cAAA,CACA,eAAA,CACA,iBAAA,CAGF,YACE,eAAA,CAGF,YACE,iBAAA,CACA,QAAA,CACA,QAAA,CACA,WAAA,CACA,WAAA,CCnCF,oBACE,cAAA,CACA,eAAA,CAGF,cACE,eAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,kBAAA,CAAA,cAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,QAAA,CAGF,kBACE,6BAAA,CAAA,gBAAA,CAGF,mBACE,cAAA,CACA,eAAA,CACA,aHnBW,CGsBb,qBACE,cAAA,CACA,aHjBoB",sourcesContent:["@mixin font-face($name, $path, $weight: normal, $style: normal) {\n  @font-face {\n    font-family: $name;\n    src:\n      url('#{$path}.woff2') format('woff2'),\n      url('#{$path}.woff') format('woff');\n    font-weight: $weight;\n    font-style: $style;\n    font-display: swap;\n  }\n}\n\n@include font-face('Jost', '../assets/fonts/Jost/Jost-Regular', 400);\n@include font-face('Jost', '../assets/fonts/Jost/Jost-Bold', 700);\n@include font-face('Jost', '../assets/fonts/Jost/Jost-SemiBold', 600);\n","* {\n  padding: 0px;\n  margin: 0px;\n  border: none;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\na,\na:link,\na:visited {\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: none;\n}\n\naside,\nnav,\nfooter,\nheader,\nsection,\nmain {\n  display: block;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\nul,\nul li {\n  list-style: none;\n}\n\nimg {\n  vertical-align: top;\n}\n\nimg,\nsvg {\n  max-width: 100%;\n  height: auto;\n}\n\naddress {\n  font-style: normal;\n}\n\ninput,\ntextarea,\nbutton,\nselect {\n  font-family: inherit;\n  font-size: inherit;\n  color: inherit;\n  background-color: transparent;\n}\n\ninput::-ms-clear {\n  display: none;\n}\n\nbutton,\ninput[type='submit'] {\n  display: inline-block;\n  box-shadow: none;\n  background-color: transparent;\n  background: none;\n  cursor: pointer;\n}\n\ninput:focus,\ninput:active,\nbutton:focus,\nbutton:active {\n  outline: none;\n}\n\nbutton::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n\nlabel {\n  cursor: pointer;\n}\n\nlegend {\n  display: block;\n}\n\ninput[type='file'] {\n  max-width: 100%;\n}\n","@use 'variables' as *;\n\nbody {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-width: 320px;\n  min-height: 100dvh;\n  font-family: $font-main;\n  font-weight: 400;\n  line-height: 1.6;\n  background-color: $bg-color-primary;\n  color: $text-color-primary;\n}\n\nsection {\n  padding: 120px 0;\n}\n\nh2 {\n  font-weight: 600;\n  font-size: 30px;\n  color: $text-color-secondary;\n}\n\nh3 {\n  font-weight: 600;\n  font-size: 36px;\n  line-height: 1.3;\n}\n\n.container {\n  margin: 0 auto;\n  padding: 0 20px;\n  max-width: 1200px;\n  width: 100%;\n\n  &--wide {\n    max-width: 1760px;\n  }\n}\n\n.logo {\n  color: $text-color-secondary;\n  font-weight: 600;\n  font-size: 30px;\n}\n\n.tel {\n  font-weight: 600;\n  font-size: 30px;\n  color: $text-color-secondary;\n\n  &:hover {\n    cursor: pointer;\n  }\n}\n\n.button {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 25px 54px;\n  font-size: 18px;\n  font-weight: 400;\n  text-decoration: none;\n  border: none;\n  border-radius: 5px;\n  background-color: $controls-bg-primary;\n  color: $text-color-secondary;\n  cursor: pointer;\n  transition:\n    background-color 0.3s ease,\n    color 0.3s ease;\n\n  &:hover {\n    background-color: $controls-bg-primary-hover;\n    color: $controls-color-primary;\n  }\n\n  &--dark {\n    background-color: $controls-bg-secondary;\n\n    &:hover {\n      background-color: $controls-bg-secondary-hover;\n      color: $controls-color-primary;\n    }\n  }\n}\n","$font-main: 'Jost', sans-serif;\n\n// Цвета\n$primary-color: #141024;\n$secondary-color: #ffffff;\n$accent-color: #d52027;\n\n// Цвета текста\n$text-color-primary: $primary-color;\n$text-color-secondary: $secondary-color;\n$text-color-tertiary: #b8b7bd;\n$text-color-accent: $accent-color;\n$text-color-quaternary: #5b5866;\n\n// Фоны\n$bg-color-primary: $secondary-color;\n$bg-color-secondary: $primary-color;\n$bg-color-accent: $accent-color;\n\n// Кнопки и элементы управления\n$controls-bg-primary: $accent-color;\n$controls-bg-primary-hover: #b9191d;\n$controls-bg-secondary: $primary-color;\n$controls-bg-secondary-hover: #282148;\n$controls-color-primary: $secondary-color;\n","@use '../variables' as *;\n\n.header {\n  position: sticky;\n  top: 0;\n  z-index: 500;\n  background-color: $bg-color-secondary;\n  color: $text-color-secondary;\n\n  &__content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 30px 0;\n    gap: 20px;\n\n    .header-nav {\n      &__list {\n        display: flex;\n        gap: 40px;\n        font-size: 20px;\n      }\n\n      &__link {\n        color: $text-color-secondary;\n        &:hover {\n          text-decoration: underline;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n}\n\n.main {\n  flex-grow: 1;\n}\n\n.footer {\n  background-color: $bg-color-secondary;\n  color: $text-color-secondary;\n\n  &__content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 40px 0;\n\n    .footer-top-block {\n      display: flex;\n      justify-content: space-between;\n    }\n\n    .footer-bottom-block {\n      &__copyright {\n        color: $text-color-tertiary;\n      }\n    }\n  }\n}\n","@use '../variables' as *;\n\n.promo {\n  height: calc(100dvh - 108px);\n  max-height: 972px;\n  position: relative;\n  overflow: hidden;\n  background-color: $bg-color-secondary;\n\n  &__content {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    max-width: 516px;\n    margin-top: 116px;\n    color: $text-color-secondary;\n  }\n\n  &__title {\n    font-weight: 600;\n    font-size: 70px;\n  }\n\n  &__description {\n    font-size: 20px;\n    max-width: 478px;\n    margin: 20px 0 0 0;\n  }\n\n  &__btn {\n    margin-top: 50px;\n  }\n\n  &__img {\n    position: absolute;\n    top: 54px;\n    left: 49%;\n    width: 783px;\n    height: auto;\n  }\n}\n","@use '../variables' as *;\n\n.about {\n  &__description {\n    font-size: 30px;\n    max-width: 890px;\n  }\n\n  &__stats {\n    margin-top: 60px;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: flex-start;\n    justify-content: center;\n    gap: 40px;\n  }\n\n  &__stat-item {\n    flex-basis: 260px;\n  }\n\n  &__stat-value {\n    font-size: 70px;\n    font-weight: 600;\n    color: $text-color-accent;\n  }\n\n  &__stat-caption {\n    font-size: 18px;\n    color: $text-color-quaternary;\n  }\n}\n"],sourceRoot:""}]);const v=C},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(A[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&A[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},417:e=>{"use strict";e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},354:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},268:(e,n,t)=>{"use strict";var o=t(72),r=t.n(o),i=t(825),A=t.n(i),a=t(659),c=t.n(a),s=t(56),l=t.n(s),d=t(540),f=t.n(d),p=t(113),u=t.n(p),C=t(887),h={};h.styleTagTransform=u(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=A(),h.insertStyleElement=f();var m=r()(C.default,h);if(!C.default.locals||e.hot.invalidate){var b=!C.default.locals,x=b?C:C.default.locals;e.hot.accept(887,(n=>{C=t(887),function(e,n,t){if(!e&&n||e&&!n)return!1;var o;for(o in e)if((!t||"default"!==o)&&e[o]!==n[o])return!1;for(o in n)if(!(t&&"default"===o||e[o]))return!1;return!0}(x,b?C:C.default.locals,b)?(x=b?C:C.default.locals,m(C.default)):e.hot.invalidate()}))}e.hot.dispose((function(){m()})),C.default&&C.default.locals&&C.default.locals},72:e=>{"use strict";var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},A=[],a=0;a<e.length;a++){var c=e[a],s=o.base?c[0]+o.base:c[0],l=i[s]||0,d="".concat(s," ").concat(l);i[s]=l+1;var f=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==f)n[f].references++,n[f].updater(p);else{var u=r(p,o);o.byIndex=a,n.splice(a,0,{identifier:d,updater:u,references:1})}A.push(d)}return A}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var A=0;A<i.length;A++){var a=t(i[A]);n[a].references--}for(var c=o(e,r),s=0;s<i.length;s++){var l=t(i[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=c}}},659:e=>{"use strict";var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},789:(e,n,t)=>{"use strict";t(268),t(144)},144:()=>{const e=document.querySelector(".heading");console.log(e.innerHTML)},22:(e,n,t)=>{"use strict";e.exports=t.p+"assets/fonts/Jost-Bold.woff"},632:(e,n,t)=>{"use strict";e.exports=t.p+"assets/fonts/Jost-Bold.woff2"},955:(e,n,t)=>{"use strict";e.exports=t.p+"assets/fonts/Jost-Regular.woff"},787:(e,n,t)=>{"use strict";e.exports=t.p+"assets/fonts/Jost-Regular.woff2"},480:(e,n,t)=>{"use strict";e.exports=t.p+"assets/fonts/Jost-SemiBold.woff"},682:(e,n,t)=>{"use strict";e.exports=t.p+"assets/fonts/Jost-SemiBold.woff2"}},o={};function r(e){var n=o[e];if(void 0!==n){if(void 0!==n.error)throw n.error;return n.exports}var i=o[e]={id:e,exports:{}};try{var A={id:e,module:i,factory:t[e],require:r};r.i.forEach((function(e){e(A)})),i=A.module,A.factory.call(i.exports,i,i.exports,A.require)}catch(e){throw i.error=e,e}return i.exports}r.m=t,r.c=o,r.i=[],r.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return r.d(n,{a:n}),n},r.d=(e,n)=>{for(var t in n)r.o(n,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},r.hu=e=>e+"."+r.h()+".hot-update.js",r.miniCssF=e=>{},r.hmrF=()=>"main."+r.h()+".hot-update.json",r.h=()=>"0ec6944ed3a3cfa6f9ef",r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),e={},n="block-2-html-css:",r.l=(t,o,i,A)=>{if(e[t])e[t].push(o);else{var a,c;if(void 0!==i)for(var s=document.getElementsByTagName("script"),l=0;l<s.length;l++){var d=s[l];if(d.getAttribute("src")==t||d.getAttribute("data-webpack")==n+i){a=d;break}}a||(c=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,r.nc&&a.setAttribute("nonce",r.nc),a.setAttribute("data-webpack",n+i),a.src=t),e[t]=[o];var f=(n,o)=>{a.onerror=a.onload=null,clearTimeout(p);var r=e[t];if(delete e[t],a.parentNode&&a.parentNode.removeChild(a),r&&r.forEach((e=>e(o))),n)return n(o)},p=setTimeout(f.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=f.bind(null,a.onerror),a.onload=f.bind(null,a.onload),c&&document.head.appendChild(a)}},r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e,n,t,o={},i=r.c,A=[],a=[],c="idle",s=0,l=[];function d(e){c=e;for(var n=[],t=0;t<a.length;t++)n[t]=a[t].call(null,e);return Promise.all(n).then((function(){}))}function f(){0==--s&&d("ready").then((function(){if(0===s){var e=l;l=[];for(var n=0;n<e.length;n++)e[n]()}}))}function p(e){if("idle"!==c)throw new Error("check() is only allowed in idle status");return d("check").then(r.hmrM).then((function(t){return t?d("prepare").then((function(){var o=[];return n=[],Promise.all(Object.keys(r.hmrC).reduce((function(e,i){return r.hmrC[i](t.c,t.r,t.m,e,n,o),e}),[])).then((function(){return n=function(){return e?C(e):d("ready").then((function(){return o}))},0===s?n():new Promise((function(e){l.push((function(){e(n())}))}));var n}))})):d(h()?"ready":"idle").then((function(){return null}))}))}function u(e){return"ready"!==c?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+c+")")})):C(e)}function C(e){e=e||{},h();var o=n.map((function(n){return n(e)}));n=void 0;var r=o.map((function(e){return e.error})).filter(Boolean);if(r.length>0)return d("abort").then((function(){throw r[0]}));var i=d("dispose");o.forEach((function(e){e.dispose&&e.dispose()}));var A,a=d("apply"),c=function(e){A||(A=e)},s=[];return o.forEach((function(e){if(e.apply){var n=e.apply(c);if(n)for(var t=0;t<n.length;t++)s.push(n[t])}})),Promise.all([i,a]).then((function(){return A?d("fail").then((function(){throw A})):t?C(e).then((function(e){return s.forEach((function(n){e.indexOf(n)<0&&e.push(n)})),e})):d("idle").then((function(){return s}))}))}function h(){if(t)return n||(n=[]),Object.keys(r.hmrI).forEach((function(e){t.forEach((function(t){r.hmrI[e](t,n)}))})),t=void 0,!0}r.hmrD=o,r.i.push((function(l){var C,h,m,b,x=l.module,g=function(n,t){var o=i[t];if(!o)return n;var r=function(r){if(o.hot.active){if(i[r]){var a=i[r].parents;-1===a.indexOf(t)&&a.push(t)}else A=[t],e=r;-1===o.children.indexOf(r)&&o.children.push(r)}else console.warn("[HMR] unexpected require("+r+") from disposed module "+t),A=[];return n(r)},a=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(t){n[e]=t}}};for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&"e"!==l&&Object.defineProperty(r,l,a(l));return r.e=function(e,t){return function(e){switch(c){case"ready":d("prepare");case"prepare":return s++,e.then(f,f),e;default:return e}}(n.e(e,t))},r}(l.require,l.id);x.hot=(C=l.id,h=x,b={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:m=e!==C,_requireSelf:function(){A=h.parents.slice(),e=m?void 0:C,r(C)},active:!0,accept:function(e,n,t){if(void 0===e)b._selfAccepted=!0;else if("function"==typeof e)b._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var o=0;o<e.length;o++)b._acceptedDependencies[e[o]]=n||function(){},b._acceptedErrorHandlers[e[o]]=t;else b._acceptedDependencies[e]=n||function(){},b._acceptedErrorHandlers[e]=t},decline:function(e){if(void 0===e)b._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var n=0;n<e.length;n++)b._declinedDependencies[e[n]]=!0;else b._declinedDependencies[e]=!0},dispose:function(e){b._disposeHandlers.push(e)},addDisposeHandler:function(e){b._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=b._disposeHandlers.indexOf(e);n>=0&&b._disposeHandlers.splice(n,1)},invalidate:function(){switch(this._selfInvalidated=!0,c){case"idle":n=[],Object.keys(r.hmrI).forEach((function(e){r.hmrI[e](C,n)})),d("ready");break;case"ready":Object.keys(r.hmrI).forEach((function(e){r.hmrI[e](C,n)}));break;case"prepare":case"check":case"dispose":case"apply":(t=t||[]).push(C)}},check:p,apply:u,status:function(e){if(!e)return c;a.push(e)},addStatusHandler:function(e){a.push(e)},removeStatusHandler:function(e){var n=a.indexOf(e);n>=0&&a.splice(n,1)},data:o[C]},e=void 0,b),x.parents=A,x.children=[],A=[],l.require=g})),r.hmrC={},r.hmrI={}})(),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var n=r.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");if(t.length)for(var o=t.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=t[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),(()=>{if("undefined"!=typeof document){var e=[],n=[],t=t=>({dispose:()=>{for(var n=0;n<e.length;n++){var t=e[n];t.parentNode&&t.parentNode.removeChild(t)}e.length=0},apply:()=>{for(var e=0;e<n.length;e++)n[e].rel="stylesheet";n.length=0}});r.hmrC.miniCss=(o,i,A,a,c,s)=>{c.push(t),o.forEach((t=>{var o=r.miniCssF(t),i=r.p+o,A=((e,n)=>{for(var t=document.getElementsByTagName("link"),o=0;o<t.length;o++){var r=(A=t[o]).getAttribute("data-href")||A.getAttribute("href");if("stylesheet"===A.rel&&(r===e||r===n))return A}var i=document.getElementsByTagName("style");for(o=0;o<i.length;o++){var A;if((r=(A=i[o]).getAttribute("data-href"))===e||r===n)return A}})(o,i);A&&a.push(new Promise(((o,a)=>{var c=((e,n,t,o,i)=>{var A=document.createElement("link");return A.rel="stylesheet",A.type="text/css",r.nc&&(A.nonce=r.nc),A.onerror=A.onload=t=>{if(A.onerror=A.onload=null,"load"===t.type)o();else{var r=t&&t.type,a=t&&t.target&&t.target.href||n,c=new Error("Loading CSS chunk "+e+" failed.\n("+r+": "+a+")");c.name="ChunkLoadError",c.code="CSS_CHUNK_LOAD_FAILED",c.type=r,c.request=a,A.parentNode&&A.parentNode.removeChild(A),i(c)}},A.href=n,t?t.parentNode.insertBefore(A,t.nextSibling):document.head.appendChild(A),A})(t,i,A,(()=>{c.as="style",c.rel="preload",o()}),a);e.push(A),n.push(c)})))}))}}})(),(()=>{r.b=document.baseURI||self.location.href;var e,n,t,o,i,A=r.hmrS_jsonp=r.hmrS_jsonp||{792:0},a={};function c(n,t){return e=t,new Promise(((e,t)=>{a[n]=e;var o=r.p+r.hu(n),i=new Error;r.l(o,(e=>{if(a[n]){a[n]=void 0;var o=e&&("load"===e.type?"missing":e.type),r=e&&e.target&&e.target.src;i.message="Loading hot update chunk "+n+" failed.\n("+o+": "+r+")",i.name="ChunkLoadError",i.type=o,i.request=r,t(i)}}))}))}function s(e){function a(e){for(var n=[e],t={},o=n.map((function(e){return{chain:[e],id:e}}));o.length>0;){var i=o.pop(),A=i.id,a=i.chain,s=r.c[A];if(s&&(!s.hot._selfAccepted||s.hot._selfInvalidated)){if(s.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:A};if(s.hot._main)return{type:"unaccepted",chain:a,moduleId:A};for(var l=0;l<s.parents.length;l++){var d=s.parents[l],f=r.c[d];if(f){if(f.hot._declinedDependencies[A])return{type:"declined",chain:a.concat([d]),moduleId:A,parentId:d};-1===n.indexOf(d)&&(f.hot._acceptedDependencies[A]?(t[d]||(t[d]=[]),c(t[d],[A])):(delete t[d],n.push(d),o.push({chain:a.concat([d]),id:d})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:t}}function c(e,n){for(var t=0;t<n.length;t++){var o=n[t];-1===e.indexOf(o)&&e.push(o)}}r.f&&delete r.f.jsonpHmr,n=void 0;var s={},l=[],d={},f=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var p in t)if(r.o(t,p)){var u=t[p],C=u?a(p):{type:"disposed",moduleId:p},h=!1,m=!1,b=!1,x="";switch(C.chain&&(x="\nUpdate propagation: "+C.chain.join(" -> ")),C.type){case"self-declined":e.onDeclined&&e.onDeclined(C),e.ignoreDeclined||(h=new Error("Aborted because of self decline: "+C.moduleId+x));break;case"declined":e.onDeclined&&e.onDeclined(C),e.ignoreDeclined||(h=new Error("Aborted because of declined dependency: "+C.moduleId+" in "+C.parentId+x));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(C),e.ignoreUnaccepted||(h=new Error("Aborted because "+p+" is not accepted"+x));break;case"accepted":e.onAccepted&&e.onAccepted(C),m=!0;break;case"disposed":e.onDisposed&&e.onDisposed(C),b=!0;break;default:throw new Error("Unexception type "+C.type)}if(h)return{error:h};if(m)for(p in d[p]=u,c(l,C.outdatedModules),C.outdatedDependencies)r.o(C.outdatedDependencies,p)&&(s[p]||(s[p]=[]),c(s[p],C.outdatedDependencies[p]));b&&(c(l,[C.moduleId]),d[p]=f)}t=void 0;for(var g,y=[],v=0;v<l.length;v++){var w=l[v],B=r.c[w];B&&(B.hot._selfAccepted||B.hot._main)&&d[w]!==f&&!B.hot._selfInvalidated&&y.push({module:w,require:B.hot._requireSelf,errorHandler:B.hot._selfAccepted})}return{dispose:function(){var e;o.forEach((function(e){delete A[e]})),o=void 0;for(var n,t=l.slice();t.length>0;){var i=t.pop(),a=r.c[i];if(a){var c={},d=a.hot._disposeHandlers;for(v=0;v<d.length;v++)d[v].call(null,c);for(r.hmrD[i]=c,a.hot.active=!1,delete r.c[i],delete s[i],v=0;v<a.children.length;v++){var f=r.c[a.children[v]];f&&(e=f.parents.indexOf(i))>=0&&f.parents.splice(e,1)}}}for(var p in s)if(r.o(s,p)&&(a=r.c[p]))for(g=s[p],v=0;v<g.length;v++)n=g[v],(e=a.children.indexOf(n))>=0&&a.children.splice(e,1)},apply:function(n){for(var t in d)r.o(d,t)&&(r.m[t]=d[t]);for(var o=0;o<i.length;o++)i[o](r);for(var A in s)if(r.o(s,A)){var a=r.c[A];if(a){g=s[A];for(var c=[],f=[],p=[],u=0;u<g.length;u++){var C=g[u],h=a.hot._acceptedDependencies[C],m=a.hot._acceptedErrorHandlers[C];if(h){if(-1!==c.indexOf(h))continue;c.push(h),f.push(m),p.push(C)}}for(var b=0;b<c.length;b++)try{c[b].call(null,g)}catch(t){if("function"==typeof f[b])try{f[b](t,{moduleId:A,dependencyId:p[b]})}catch(o){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:A,dependencyId:p[b],error:o,originalError:t}),e.ignoreErrored||(n(o),n(t))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:A,dependencyId:p[b],error:t}),e.ignoreErrored||n(t)}}}for(var x=0;x<y.length;x++){var v=y[x],w=v.module;try{v.require(w)}catch(t){if("function"==typeof v.errorHandler)try{v.errorHandler(t,{moduleId:w,module:r.c[w]})}catch(o){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:w,error:o,originalError:t}),e.ignoreErrored||(n(o),n(t))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:w,error:t}),e.ignoreErrored||n(t)}}return l}}}self.webpackHotUpdateblock_2_html_css=(n,o,A)=>{for(var c in o)r.o(o,c)&&(t[c]=o[c],e&&e.push(c));A&&i.push(A),a[n]&&(a[n](),a[n]=void 0)},r.hmrI.jsonp=function(e,n){t||(t={},i=[],o=[],n.push(s)),r.o(t,e)||(t[e]=r.m[e])},r.hmrC.jsonp=function(e,a,l,d,f,p){f.push(s),n={},o=a,t=l.reduce((function(e,n){return e[n]=!1,e}),{}),i=[],e.forEach((function(e){r.o(A,e)&&void 0!==A[e]?(d.push(c(e,p)),n[e]=!0):n[e]=!1})),r.f&&(r.f.jsonpHmr=function(e,t){n&&r.o(n,e)&&!n[e]&&(t.push(c(e)),n[e]=!0)})},r.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(r.p+r.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),r.nc=void 0,r(789)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,